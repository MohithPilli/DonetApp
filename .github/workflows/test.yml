name: workflow
on: 
  push: 
    branches: ["master"]

jobs:
  Build:  
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Show settings.json
        run: |
          if [[ -f ./settings.json ]]; then
            cat settings.json
          else
            echo "settings.json not found."
          fi
        shell: bash

      - name: Update JSON File with Secrets
        env:
          SECRETS_JSON: ${{ toJson(secrets) }}
        run: |
          # Define the JSON file path
          JSON_FILE="./settings.json"

          # Check if JSON file exists
          if [[ ! -f $JSON_FILE ]]; then
            echo "Error: $JSON_FILE not found."
            exit 1
          fi

          # Read all keys from the JSON file
          echo "Reading keys from JSON file..."
          KEYS=$(jq -r 'paths | map(tostring) | join(".")' $JSON_FILE)
          echo "Keys found in JSON file: $KEYS"

          # Convert SECRETS_JSON into a readable format
          echo "$SECRETS_JSON" | jq . > secrets_temp.json
          echo "Available GitHub secrets:"
          cat secrets_temp.json

          # Iterate over the keys and update their values from environment variables
          for KEY_PATH in $KEYS; do
            echo "Processing key: $KEY_PATH"
            SECRET_KEY=$(echo "$KEY_PATH" | tr '.' '_' | tr '[:lower:]' '[:upper:]')
            SECRET_VALUE=$(printenv "$SECRET_KEY")
            if [[ -n "$SECRET_VALUE" ]]; then
              echo "Found matching GitHub secret for key: $KEY_PATH"
              jq --arg path "$KEY_PATH" --arg value "$SECRET_VALUE" '
                setpath($path | split(".") | map(select(length > 0)); $value)' \
                "$JSON_FILE" > temp.json && mv temp.json "$JSON_FILE"
            fi
          done

          # Print the updated JSON file for verification
          echo "Updated JSON file content:"
          cat "$JSON_FILE"
        shell: bash
